generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Partner {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  edi_version        String
  delimiters         String
  EOL                String
  type_of_connection String
  PO_Test            Json

  EDI_documents EDI_Document[]

  partnershipsId String             @unique @db.ObjectId
  partnerships   associated_partner @relation(fields: [partnershipsId], references: [id])
}

model Client {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  partnerships associated_partner?
}

model associated_partner {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  partner Partner?

  uploaded_documents document[]

  clientId String @unique @db.ObjectId
  client   Client @relation(fields: [clientId], references: [id])
}

model document {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  type          String
  json_document Json

  partnershipId String             @unique @db.ObjectId
  partnership   associated_partner @relation(fields: [partnershipId], references: [id])

  errors error[]
}

model error {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  code    String
  message String

  documentId String   @unique @db.ObjectId
  document   document @relation(fields: [documentId], references: [id])
}

model EDI_Document {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  type     String
  template Boolean

  structure Segment[]

  partnerId String  @unique @db.ObjectId
  partner   Partner @relation(fields: [partnerId], references: [id])
}

model Segment {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  template Boolean

  EDI_DocumentId String       @unique @db.ObjectId
  EDI_Document   EDI_Document @relation(fields: [EDI_DocumentId], references: [id])

  rules rule[]
}

model rule {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  code String

  validation validation?

  segmentId String  @db.ObjectId
  segment   Segment @relation(fields: [segmentId], references: [id])
}

model validation {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  mandatory String
  min       Int
  max       Int
  type      String

  ruleId String @unique @db.ObjectId
  rule   rule   @relation(fields: [ruleId], references: [id])
}
